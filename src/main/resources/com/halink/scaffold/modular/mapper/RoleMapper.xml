<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.halink.scaffold.modular.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.halink.scaffold.common.entity.Role">
    <!--@mbg.generated-->
    <!--@Table mgt_role-->
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
    <result column="user_create" jdbcType="BIGINT" property="userCreate" />
    <result column="user_modified" jdbcType="BIGINT" property="userModified" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="permission_code_set" jdbcType="INTEGER" property="permissionCodeSet" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    role_id, role_name, role_desc, user_create, user_modified, gmt_create, gmt_modified, 
    permission_code_set
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from mgt_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from mgt_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="role_id" keyProperty="roleId" parameterType="com.halink.scaffold.common.entity.Role" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mgt_role (role_name, role_desc, user_create, 
      user_modified, gmt_create, gmt_modified, 
      permission_code_set)
    values (#{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, #{userCreate,jdbcType=BIGINT}, 
      #{userModified,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{permissionCodeSet,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="role_id" keyProperty="roleId" parameterType="com.halink.scaffold.common.entity.Role" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mgt_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleDesc != null">
        role_desc,
      </if>
      <if test="userCreate != null">
        user_create,
      </if>
      <if test="userModified != null">
        user_modified,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="permissionCodeSet != null">
        permission_code_set,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="userCreate != null">
        #{userCreate,jdbcType=BIGINT},
      </if>
      <if test="userModified != null">
        #{userModified,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="permissionCodeSet != null">
        #{permissionCodeSet,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.halink.scaffold.common.entity.Role">
    <!--@mbg.generated-->
    update mgt_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="userCreate != null">
        user_create = #{userCreate,jdbcType=BIGINT},
      </if>
      <if test="userModified != null">
        user_modified = #{userModified,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="permissionCodeSet != null">
        permission_code_set = #{permissionCodeSet,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
</mapper>