<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.halink.scaffold.modular.mapper.GroupMapper">
  <resultMap id="BaseResultMap" type="com.halink.scaffold.common.entity.Group">
    <!--@mbg.generated-->
    <!--@Table mgt_group-->
    <id column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="user_create" jdbcType="BIGINT" property="userCreate" />
    <result column="user_modified" jdbcType="BIGINT" property="userModified" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="mark_deleted" jdbcType="BOOLEAN" property="markDeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    group_id, group_name, user_create, user_modified, gmt_create, gmt_modified, pid, 
    mark_deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from mgt_group
    where group_id = #{groupId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from mgt_group
    where group_id = #{groupId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="group_id" keyProperty="groupId" parameterType="com.halink.scaffold.common.entity.Group" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mgt_group (group_name, user_create, user_modified, 
      gmt_create, gmt_modified, pid, 
      mark_deleted)
    values (#{groupName,jdbcType=VARCHAR}, #{userCreate,jdbcType=BIGINT}, #{userModified,jdbcType=BIGINT}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{pid,jdbcType=BIGINT}, 
      #{markDeleted,jdbcType=BOOLEAN})
  </insert>
  <insert id="insertSelective" keyColumn="group_id" keyProperty="groupId" parameterType="com.halink.scaffold.common.entity.Group" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mgt_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupName != null">
        group_name,
      </if>
      <if test="userCreate != null">
        user_create,
      </if>
      <if test="userModified != null">
        user_modified,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="markDeleted != null">
        mark_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="userCreate != null">
        #{userCreate,jdbcType=BIGINT},
      </if>
      <if test="userModified != null">
        #{userModified,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="markDeleted != null">
        #{markDeleted,jdbcType=BOOLEAN},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.halink.scaffold.common.entity.Group">
    <!--@mbg.generated-->
    update mgt_group
    <set>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="userCreate != null">
        user_create = #{userCreate,jdbcType=BIGINT},
      </if>
      <if test="userModified != null">
        user_modified = #{userModified,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="markDeleted != null">
        mark_deleted = #{markDeleted,jdbcType=BOOLEAN},
      </if>
    </set>
    where group_id = #{groupId,jdbcType=BIGINT}
  </update>
</mapper>