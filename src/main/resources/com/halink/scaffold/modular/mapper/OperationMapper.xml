<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.halink.scaffold.modular.mapper.OperationMapper">
  <resultMap id="BaseResultMap" type="com.halink.scaffold.common.entity.Operation">
    <!--@mbg.generated-->
    <!--@Table mgt_operation-->
    <id column="operation_id" jdbcType="INTEGER" property="operationId" />
    <result column="operation_name" jdbcType="VARCHAR" property="operationName" />
    <result column="operation_desc" jdbcType="VARCHAR" property="operationDesc" />
    <result column="request_url" jdbcType="VARCHAR" property="requestUrl" />
    <result column="permission_id" jdbcType="INTEGER" property="permissionId" />
    <result column="perm" jdbcType="VARCHAR" property="perm" />
    <result column="route" jdbcType="VARCHAR" property="route" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="operation_code" jdbcType="INTEGER" property="operationCode" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    operation_id, operation_name, operation_desc, request_url, permission_id, perm, route, 
    `type`, operation_code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from mgt_operation
    where operation_id = #{operationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from mgt_operation
    where operation_id = #{operationId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="operation_id" keyProperty="operationId" parameterType="com.halink.scaffold.common.entity.Operation" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mgt_operation (operation_name, operation_desc, request_url, 
      permission_id, perm, route, 
      `type`, operation_code)
    values (#{operationName,jdbcType=VARCHAR}, #{operationDesc,jdbcType=VARCHAR}, #{requestUrl,jdbcType=VARCHAR}, 
      #{permissionId,jdbcType=INTEGER}, #{perm,jdbcType=VARCHAR}, #{route,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT}, #{operationCode,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="operation_id" keyProperty="operationId" parameterType="com.halink.scaffold.common.entity.Operation" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mgt_operation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operationName != null">
        operation_name,
      </if>
      <if test="operationDesc != null">
        operation_desc,
      </if>
      <if test="requestUrl != null">
        request_url,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="perm != null">
        perm,
      </if>
      <if test="route != null">
        route,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="operationCode != null">
        operation_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operationName != null">
        #{operationName,jdbcType=VARCHAR},
      </if>
      <if test="operationDesc != null">
        #{operationDesc,jdbcType=VARCHAR},
      </if>
      <if test="requestUrl != null">
        #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="perm != null">
        #{perm,jdbcType=VARCHAR},
      </if>
      <if test="route != null">
        #{route,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="operationCode != null">
        #{operationCode,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.halink.scaffold.common.entity.Operation">
    <!--@mbg.generated-->
    update mgt_operation
    <set>
      <if test="operationName != null">
        operation_name = #{operationName,jdbcType=VARCHAR},
      </if>
      <if test="operationDesc != null">
        operation_desc = #{operationDesc,jdbcType=VARCHAR},
      </if>
      <if test="requestUrl != null">
        request_url = #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="perm != null">
        perm = #{perm,jdbcType=VARCHAR},
      </if>
      <if test="route != null">
        route = #{route,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="operationCode != null">
        operation_code = #{operationCode,jdbcType=INTEGER},
      </if>
    </set>
    where operation_id = #{operationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.halink.scaffold.common.entity.Operation">
    <!--@mbg.generated-->
    update mgt_operation
    set operation_name = #{operationName,jdbcType=VARCHAR},
      operation_desc = #{operationDesc,jdbcType=VARCHAR},
      request_url = #{requestUrl,jdbcType=VARCHAR},
      permission_id = #{permissionId,jdbcType=INTEGER},
      perm = #{perm,jdbcType=VARCHAR},
      route = #{route,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=TINYINT},
      operation_code = #{operationCode,jdbcType=INTEGER}
    where operation_id = #{operationId,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update mgt_operation
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="operation_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when operation_id = #{item.operationId,jdbcType=INTEGER} then #{item.operationName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="operation_desc = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when operation_id = #{item.operationId,jdbcType=INTEGER} then #{item.operationDesc,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="request_url = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when operation_id = #{item.operationId,jdbcType=INTEGER} then #{item.requestUrl,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="permission_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when operation_id = #{item.operationId,jdbcType=INTEGER} then #{item.permissionId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="perm = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when operation_id = #{item.operationId,jdbcType=INTEGER} then #{item.perm,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="route = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when operation_id = #{item.operationId,jdbcType=INTEGER} then #{item.route,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`type` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when operation_id = #{item.operationId,jdbcType=INTEGER} then #{item.type,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="operation_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when operation_id = #{item.operationId,jdbcType=INTEGER} then #{item.operationCode,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where operation_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.operationId,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="operation_id" keyProperty="operationId" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mgt_operation
    (operation_name, operation_desc, request_url, permission_id, perm, route, `type`, 
      operation_code)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.operationName,jdbcType=VARCHAR}, #{item.operationDesc,jdbcType=VARCHAR}, 
        #{item.requestUrl,jdbcType=VARCHAR}, #{item.permissionId,jdbcType=INTEGER}, #{item.perm,jdbcType=VARCHAR}, 
        #{item.route,jdbcType=VARCHAR}, #{item.type,jdbcType=TINYINT}, #{item.operationCode,jdbcType=INTEGER}
        )
    </foreach>
  </insert>
</mapper>