<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsc.startproject.modular.mapper.GroupUserRoleRelationMapper">
  <resultMap id="BaseResultMap" type="com.lsc.startproject.common.entity.GroupUserRoleRelation">
    <!--@mbg.generated-->
    <!--@Table mgt_group_user_role_relation-->
    <id column="group_id" jdbcType="VARCHAR" property="groupId" />
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <id column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="user_create" jdbcType="VARCHAR" property="userCreate" />
    <result column="user_modified" jdbcType="VARCHAR" property="userModified" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    group_id, user_id, role_id, user_create, user_modified, gmt_create, gmt_modified
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from mgt_group_user_role_relation
    where group_id = #{groupId,jdbcType=VARCHAR}
      and user_id = #{userId,jdbcType=VARCHAR}
      and role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    <!--@mbg.generated-->
    delete from mgt_group_user_role_relation
    where group_id = #{groupId,jdbcType=VARCHAR}
      and user_id = #{userId,jdbcType=VARCHAR}
      and role_id = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lsc.startproject.common.entity.GroupUserRoleRelation">
    <!--@mbg.generated-->
    insert into mgt_group_user_role_relation (group_id, user_id, role_id, 
      user_create, user_modified, gmt_create, 
      gmt_modified)
    values (#{groupId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, 
      #{userCreate,jdbcType=VARCHAR}, #{userModified,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lsc.startproject.common.entity.GroupUserRoleRelation">
    <!--@mbg.generated-->
    insert into mgt_group_user_role_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        group_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="userCreate != null">
        user_create,
      </if>
      <if test="userModified != null">
        user_modified,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="userCreate != null">
        #{userCreate,jdbcType=VARCHAR},
      </if>
      <if test="userModified != null">
        #{userModified,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lsc.startproject.common.entity.GroupUserRoleRelation">
    <!--@mbg.generated-->
    update mgt_group_user_role_relation
    <set>
      <if test="userCreate != null">
        user_create = #{userCreate,jdbcType=VARCHAR},
      </if>
      <if test="userModified != null">
        user_modified = #{userModified,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where group_id = #{groupId,jdbcType=VARCHAR}
      and user_id = #{userId,jdbcType=VARCHAR}
      and role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lsc.startproject.common.entity.GroupUserRoleRelation">
    <!--@mbg.generated-->
    update mgt_group_user_role_relation
    set user_create = #{userCreate,jdbcType=VARCHAR},
      user_modified = #{userModified,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where group_id = #{groupId,jdbcType=VARCHAR}
      and user_id = #{userId,jdbcType=VARCHAR}
      and role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update mgt_group_user_role_relation
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_create = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when group_id = #{item.groupId,jdbcType=VARCHAR} then #{item.userCreate,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="user_modified = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when group_id = #{item.groupId,jdbcType=VARCHAR} then #{item.userModified,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="gmt_create = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when group_id = #{item.groupId,jdbcType=VARCHAR} then #{item.gmtCreate,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="gmt_modified = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when group_id = #{item.groupId,jdbcType=VARCHAR} then #{item.gmtModified,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where group_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.groupId,jdbcType=VARCHAR}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into mgt_group_user_role_relation
    (group_id, user_id, role_id, user_create, user_modified, gmt_create, gmt_modified
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.groupId,jdbcType=VARCHAR}, #{item.userId,jdbcType=VARCHAR}, #{item.roleId,jdbcType=VARCHAR}, 
        #{item.userCreate,jdbcType=VARCHAR}, #{item.userModified,jdbcType=VARCHAR}, #{item.gmtCreate,jdbcType=TIMESTAMP}, 
        #{item.gmtModified,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
</mapper>